steps:
  - id: Examples
    name: 'gcr.io/$PROJECT_ID/python:latest'
    entrypoint: 'bash'
    args: ['ls']

#  # Install dependencies
#  - id: Install requirements
#    name: python
#    entrypoint: pip
#    args: [ "install", "-r", "requirements.txt", "--user" ]
#
#  # Run unit tests
#  - id: Execute Unit Test
#    name: python
#    entrypoint: python
#    args: ["-m", "unittest", "discover", "test/", "-v" ]
#
#  - name: python
#    script: |
#      #!/usr/bin/env python
#      print('hello from python')
#
#  - name: python
#    script: |
#      #!/usr/bin/env python
#      -m coverage xml
#
#  - id: Generate Report
#    name: python
#    entrypoint: python
#    args: ["-m", "coverage", "xml"]
#
#  # Docker Build
##  - id: Docker Build
##    name: 'gcr.io/cloud-builders/docker'
##    args: [ 'build', '-f','src/main/docker/Dockerfile.jvm','-t','gcr.io/$PROJECT_ID/${REPO_NAME}:v.${TAG_NAME}', '.' ]
#  - id: Sonar Analysis
#    name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
#    args:
#      - '-Dsonar.host.url=http://34.67.142.84:9001'
#      - '-Dsonar.login=sqp_7bd8d85df2e742c4eafd9d7a7c5d0db84deefb2d'
#      - '-Dsonar.projectKey=test-python-sport'
#      - '-Dsonar.sources=.'

#  - id: Docker Build
#    name: 'gcr.io/cloud-builders/docker'
#    args: [ 'build', '-f','src/main/docker/Dockerfile.jvm','-t','gcr.io/$PROJECT_ID/${REPO_NAME}:v.${TAG_NAME}', '.']

